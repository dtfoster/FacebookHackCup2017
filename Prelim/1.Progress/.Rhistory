linenum = linenum + 1
linenum
vars = unlist(strsplit(line,split = " "))
progress = as.integer(vars[1])
x = as.integer(vars[2])
y = as.integer(vars[3])
progress
x
y
p
answer = calcColour(progress, x, y)
answer
writeOut = paste0("Case #", linenum, ": ", answer)
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
paste0("Case #", linenum - 1, ": ", answer)
writeLines(writeOut, outCon)
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie.txt'
outFilePath = './submission/progress_pie_submission.txt'
processFile(inFilePath, outFilePath)
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
sqrt(3200)
sqrt(1800)
source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie_2.txt'
outFilePath = './submission/progress_pie_submission_2.txt'
processFile(inFilePath, outFilePath)
source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie_example_2.txt'
outFilePath = './submission/progress_pie_example_submission_2.txt'
processFile(inFilePath, outFilePath)
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie_example_3.txt'
outFilePath = './submission/progress_pie_example_submission_3.txt'
processFile(inFilePath, outFilePath)
source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie_example_3.txt'
outFilePath = './submission/progress_pie_example_submission_3.txt'
processFile(inFilePath, outFilePath)
source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie_example_3.txt'
outFilePath = './submission/progress_pie_example_submission_3.txt'
processFile(inFilePath, outFilePath)
progress = 12
x = 50
y = 20
calcColour(progress, x,y)
distToCentre = distanceCalc(x,y,50,50)
distToCentre
cosProgress = cosAngleGivenProgress(progress)
cosPoint = cosAngleGivenPoint(x,y)
cosProgress
cosPoint
x
cosPoint
x
y
cosProgress
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
calcColour(progress, x,y)
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
calcColour(progress, x,y)
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie_example_3.txt'
outFilePath = './submission/progress_pie_example_submission_3.txt'
processFile(inFilePath, outFilePath)
source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie_example_3.txt'
outFilePath = './submission/progress_pie_example_submission_3.txt'
processFile(inFilePath, outFilePath)
source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie_example_3.txt'
outFilePath = './submission/progress_pie_example_submission_3.txt'
processFile(inFilePath, outFilePath)
source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie_example_2.txt'
outFilePath = './submission/progress_pie_example_submission_3.txt'
processFile(inFilePath, outFilePath)
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie_example_2.txt'
outFilePath = './submission/progress_pie_example_submission_3.txt'
processFile(inFilePath, outFilePath)
progress = 50
x = 50
y = 50
inCon = file(inFilePath, "r")
outCon = file(outFilePath, "w")
linenum = 0
line = readLines(inCon, n = 1)
line = readLines(inCon, n = 1)
linenum = linenum + 1
linenum = linenum + 1
vars = unlist(strsplit(line,split = " "))
progress = as.numeric(vars[1])
x = as.numeric(vars[2])
y = as.numeric(vars[3])
vars
progress = 50
x = 50
y = 50
distToCentre = distanceCalc(x,y,50,50)
distToCentre
cosProgress = cosAngleGivenProgress(progress)
cosProgress
cosPoint = cosAngleGivenPoint(x,y)
cosPoint
x == 50 & y == 50
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie_example_2.txt'
outFilePath = './submission/progress_pie_example_submission_3.txt'
processFile(inFilePath, outFilePath)
source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie_example_2.txt'
outFilePath = './submission/progress_pie_example_submission_3.txt'
processFile(inFilePath, outFilePath)
source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie_example_2.txt'
outFilePath = './submission/progress_pie_example_submission_3.txt'
processFile(inFilePath, outFilePath)
source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie.txt'
outFilePath = './submission/progress_pie_submission.txt'
processFile(inFilePath, outFilePath)
sqrt((81-50)^2 + (83-50)^2)
calcColour(60,81,83)
sqrt((81-50)^2 + (83-50)^2)
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
processFile = function(inFilePath, outFilePath) {
inCon = file(inFilePath, "r")
outCon = file(outFilePath, "w")
linenum = 0
while ( TRUE ) {
line = readLines(inCon, n = 1)
if ( length(line) == 0 ) {
break
}
linenum = linenum + 1
if (linenum == 1){
T = as.integer(line)
}else{
vars = unlist(strsplit(line,split = " "))
progress = as.numeric(vars[1])
x = as.numeric(vars[2])
y = as.numeric(vars[3])
if (x == 50 & y == 50){
answer = "black"
}else{
answer = calcColour(progress, x, y)
}
writeOut = paste0("Case #", linenum - 1, ": ", answer)
writeLines(writeOut, outCon)
}
}
close(inCon)
close(outCon)
}
cosAngleGivenProgress = function(progress){
return (cos(2 * pi * (progress/100)))
}
cosAngleGivenPoint = function(x,y){
a = 50
b = distanceCalc(x,y,50,100)
c = distanceCalc(x,y,50,50)
cosB = (a^2 + c^2 - b^2) / (2*a*c)
return (cosB)
}
distanceCalc = function(x1,y1,x2,y2){
return (sqrt((x1-x2)^2 + (y1-y2)^2))
}
calcColour = function(progress, x, y){
distToCentre = distanceCalc(x,y,50,50)
if (distToCentre>50){
return ("white")
}else{
cosProgress = cosAngleGivenProgress(progress)
cosPoint = cosAngleGivenPoint(x,y)
if (progress<50){
if (cosProgress < cosPoint){
return ("black")
}else{
return ("white")
}
}else{
if (cosProgress > cosPoint){
return ("black")
}else{
return ("white")
}
}
}
}
#source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie.txt'
outFilePath = './submission/progress_pie_submission.txt'
processFile(inFilePath, outFilePath)
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
calcColour(60,81,83)
progress = 60
x = 81
y = 83
distToCentre = distanceCalc(x,y,50,50)
distToCentre
cosProgress = cosAngleGivenProgress(progress)
cosPoint = cosAngleGivenPoint(x,y)
cosProgress
cosPoint
cosProgress > cosPoint
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
processFile = function(inFilePath, outFilePath) {
inCon = file(inFilePath, "r")
outCon = file(outFilePath, "w")
linenum = 0
while ( TRUE ) {
line = readLines(inCon, n = 1)
if ( length(line) == 0 ) {
break
}
linenum = linenum + 1
if (linenum == 1){
T = as.integer(line)
}else{
vars = unlist(strsplit(line,split = " "))
progress = as.numeric(vars[1])
x = as.numeric(vars[2])
y = as.numeric(vars[3])
if (x == 50 & y == 50){
answer = "black"
}else{
answer = calcColour(progress, x, y)
}
writeOut = paste0("Case #", linenum - 1, ": ", answer)
writeLines(writeOut, outCon)
}
}
close(inCon)
close(outCon)
}
cosAngleGivenProgress = function(progress){
return (cos(2 * pi * (progress/100)))
}
cosAngleGivenPoint = function(x,y){
a = 50
b = distanceCalc(x,y,50,100)
c = distanceCalc(x,y,50,50)
cosB = (a^2 + c^2 - b^2) / (2*a*c)
return (cosB)
}
distanceCalc = function(x1,y1,x2,y2){
return (sqrt((x1-x2)^2 + (y1-y2)^2))
}
calcColour = function(progress, x, y){
distToCentre = distanceCalc(x,y,50,50)
if (distToCentre>50){
return ("white")
}else{
cosProgress = cosAngleGivenProgress(progress)
cosPoint = cosAngleGivenPoint(x,y)
if (progress<50){
if (cosProgress < cosPoint){
return ("black")
}else{
return ("white")
}
}else{
if (cosProgress > cosPoint){
return ("black")
}else{
return ("white")
}
}
}
}
#source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie.txt'
outFilePath = './submission/progress_pie_submission.txt'
processFile(inFilePath, outFilePath)
processFile = function(inFilePath, outFilePath) {
inCon = file(inFilePath, "r")
outCon = file(outFilePath, "w")
linenum = 0
while ( TRUE ) {
line = readLines(inCon, n = 1)
if ( length(line) == 0 ) {
break
}
linenum = linenum + 1
if (linenum == 1){
T = as.integer(line)
}else{
vars = unlist(strsplit(line,split = " "))
progress = as.numeric(vars[1])
x = as.numeric(vars[2])
y = as.numeric(vars[3])
if (x == 50 & y == 50){
answer = "black"
}else{
answer = calcColour(progress, x, y)
}
writeOut = paste0("Case #", linenum - 1, ": ", answer)
writeLines(writeOut, outCon)
}
}
close(inCon)
close(outCon)
}
cosAngleGivenProgress = function(progress){
return (cos(2 * pi * (progress/100)))
}
cosAngleGivenPoint = function(x,y){
a = 50
b = distanceCalc(x,y,50,100)
c = distanceCalc(x,y,50,50)
cosB = (a^2 + c^2 - b^2) / (2*a*c)
return (cosB)
}
distanceCalc = function(x1,y1,x2,y2){
return (sqrt((x1-x2)^2 + (y1-y2)^2))
}
calcColour = function(progress, x, y){
distToCentre = distanceCalc(x,y,50,50)
if (distToCentre>50){
return ("white")
}else{
cosProgress = cosAngleGivenProgress(progress)
cosPoint = cosAngleGivenPoint(x,y)
if ((progress<50 & x<50) |(progress>50 & x>50) ){
if (cosProgress < cosPoint){
return ("black")
}else{
return ("white")
}
}else{
if (cosProgress > cosPoint){
return ("black")
}else{
return ("white")
}
}
}
}
#source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie.txt'
outFilePath = './submission/progress_pie_submission.txt'
processFile(inFilePath, outFilePath)
processFile = function(inFilePath, outFilePath) {
inCon = file(inFilePath, "r")
outCon = file(outFilePath, "w")
linenum = 0
while ( TRUE ) {
line = readLines(inCon, n = 1)
if ( length(line) == 0 ) {
break
}
linenum = linenum + 1
if (linenum == 1){
T = as.integer(line)
}else{
vars = unlist(strsplit(line,split = " "))
progress = as.numeric(vars[1])
x = as.numeric(vars[2])
y = as.numeric(vars[3])
if (x == 50 & y == 50){
answer = "black"
}else{
answer = calcColour(progress, x, y)
}
writeOut = paste0("Case #", linenum - 1, ": ", answer)
writeLines(writeOut, outCon)
}
}
close(inCon)
close(outCon)
}
cosAngleGivenProgress = function(progress){
return (cos(2 * pi * (progress/100)))
}
cosAngleGivenPoint = function(x,y){
a = 50
b = distanceCalc(x,y,50,100)
c = distanceCalc(x,y,50,50)
cosB = (a^2 + c^2 - b^2) / (2*a*c)
return (cosB)
}
distanceCalc = function(x1,y1,x2,y2){
return (sqrt((x1-x2)^2 + (y1-y2)^2))
}
calcColour = function(progress, x, y){
distToCentre = distanceCalc(x,y,50,50)
if (distToCentre>50){
return ("white")
}else{
cosProgress = cosAngleGivenProgress(progress)
cosPoint = cosAngleGivenPoint(x,y)
if (progress<50){
if (cosProgress < cosPoint){
return ("black")
}else{
return ("white")
}
}else{
if (cosProgress < cosPoint){
return ("black")
}else{
return ("white")
}
}
}
}
processFile = function(inFilePath, outFilePath) {
inCon = file(inFilePath, "r")
outCon = file(outFilePath, "w")
linenum = 0
while ( TRUE ) {
line = readLines(inCon, n = 1)
if ( length(line) == 0 ) {
break
}
linenum = linenum + 1
if (linenum == 1){
T = as.integer(line)
}else{
vars = unlist(strsplit(line,split = " "))
progress = as.numeric(vars[1])
x = as.numeric(vars[2])
y = as.numeric(vars[3])
if (x == 50 & y == 50){
answer = "black"
}else{
answer = calcColour(progress, x, y)
}
writeOut = paste0("Case #", linenum - 1, ": ", answer)
writeLines(writeOut, outCon)
}
}
close(inCon)
close(outCon)
}
cosAngleGivenProgress = function(progress){
return (cos(2 * pi * (progress/100)))
}
cosAngleGivenPoint = function(x,y){
a = 50
b = distanceCalc(x,y,50,100)
c = distanceCalc(x,y,50,50)
cosB = (a^2 + c^2 - b^2) / (2*a*c)
return (cosB)
}
distanceCalc = function(x1,y1,x2,y2){
return (sqrt((x1-x2)^2 + (y1-y2)^2))
}
calcColour = function(progress, x, y){
distToCentre = distanceCalc(x,y,50,50)
if (distToCentre>50){
return ("white")
}else{
cosProgress = cosAngleGivenProgress(progress)
cosPoint = cosAngleGivenPoint(x,y)
if (progress<50){
if (cosProgress < cosPoint){
return ("black")
}else{
return ("white")
}
}else{
if (cosProgress < cosPoint){
return ("black")
}else{
return ("white")
}
}
}
}
source('~/Dropbox/Facebook Hack Cup/Prelim/1.Progress/funcs.R')
source('./funcs.R')
library(data.table)
inFilePath = './data/progress_pie.txt'
outFilePath = './submission/progress_pie_submission.txt'
processFile(inFilePath, outFilePath)
